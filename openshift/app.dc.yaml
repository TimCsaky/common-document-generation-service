---
apiVersion: v1
kind: Template
labels:
  app: "${APP_NAME}-${JOB_NAME}"
  template: "${REPO_NAME}-app-dc-template"
metadata:
  name: "${REPO_NAME}-app-dc"
objects:
  - apiVersion: secops.pathfinder.gov.bc.ca/v1alpha1
    kind: NetworkSecurityPolicy
    metadata:
      name: "${APP_NAME}-${JOB_NAME}-sa-deployer-to-k8s-api-${NAMESPACE}"
    spec:
      description: |
        Allow deployer pods to talk to the internal K8S api
      source:
        - - "$namespace=${NAMESPACE}"
          - "@app:k8s:serviceaccountname=deployer"
      destination:
        - - int:network=internal-cluster-api-endpoint
  - apiVersion: secops.pathfinder.gov.bc.ca/v1alpha1
    kind: NetworkSecurityPolicy
    metadata:
      name: "${APP_NAME}-app-${JOB_NAME}-pods-to-egress-${NAMESPACE}"
    spec:
      description: |
        Allow pods to open connections to the internet
      source:
        - - "$namespace=${NAMESPACE}"
          - "app=${APP_NAME}-${JOB_NAME}"
          - "deploymentconfig=${APP_NAME}-app-${JOB_NAME}"
          - role=app
      destination:
        - - ext:network=any
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: "${APP_NAME}-app-${JOB_NAME}"
    spec:
      replicas: 2
      revisionHistoryLimit: 10
      selector:
        app: "${APP_NAME}-${JOB_NAME}"
        deploymentconfig: "${APP_NAME}-app-${JOB_NAME}"
        role: app
      strategy:
        type: Rolling
        resources: {}
        rollingParams:
          timeoutSeconds: 600
      template:
        metadata:
          labels:
            app: "${APP_NAME}-${JOB_NAME}"
            deploymentconfig: "${APP_NAME}-app-${JOB_NAME}"
            role: app
        spec:
          volumes:
            - name: file-cache-rwm-${JOB_NAME}-data
              persistentVolumeClaim:
                claimName: file-cache-rwm-${JOB_NAME}
          containers:
            - image: docker-registry.default.svc:5000/${NAMESPACE}/${REPO_NAME}-app:${JOB_NAME}
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /
                  port: 3000
                  scheme: HTTP
                initialDelaySeconds: 10
                periodSeconds: 60
                successThreshold: 1
                timeoutSeconds: 1
              name: "${APP_NAME}-app-${JOB_NAME}"
              ports:
                - containerPort: 3000
                  protocol: TCP
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /
                  port: 3000
                  scheme: HTTP
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources:
                requests:
                  cpu: "${CPU_REQUEST}"
                  memory: "${MEMORY_REQUEST}"
                limits:
                  cpu: "${CPU_LIMIT}"
                  memory: "${MEMORY_LIMIT}"
              volumeMounts:
                - mountPath: "${FILE_CACHE_DIR}"
                  name: file-cache-rwm-${JOB_NAME}-data
              env:
                - name: NODE_ENV
                  value: production
                - name: KC_CLIENTID
                  valueFrom:
                    secretKeyRef:
                      key: username
                      name: cdogs-keycloak-secret
                - name: KC_CLIENTSECRET
                  valueFrom:
                    secretKeyRef:
                      key: password
                      name: cdogs-keycloak-secret
                - name: CMNSRV_CLIENTID
                  valueFrom:
                    secretKeyRef:
                      key: username
                      name: cdogs-common-service-secret
                - name: CMNSRV_CLIENTSECRET
                  valueFrom:
                    secretKeyRef:
                      key: password
                      name: cdogs-common-service-secret
                - name: CACHE_DIR
                  value: "${FILE_CACHE_DIR}"
                - name: CACHE_SIZE
                  value: "${FILE_CACHE_VOLUME_CAPACITY_BYTES}"
                - name: UPLOAD_FILE_SIZE
                  value: "${FILE_CACHE_MAX_FILE_SIZE}"
              envFrom:
                - configMapRef:
                    name: cdogs-keycloak-config
                - configMapRef:
                    name: cdogs-server-config
                - configMapRef:
                    name: cdogs-common-service-config
      test: false
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - "${APP_NAME}-app-${JOB_NAME}"
            from:
              kind: ImageStreamTag
              name: "${REPO_NAME}-app:${JOB_NAME}"
              namespace: "${NAMESPACE}"
          type: ImageChange
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: file-cache-rwm-${JOB_NAME}
    spec:
      accessModes:
        - ReadWriteMany
      storageClassName: ${FILE_CACHE_PERSISTENT_VOLUME_CLASS}
      resources:
        requests:
          storage: '${FILE_CACHE_VOLUME_CAPACITY}'
  - apiVersion: v1
    kind: Service
    metadata:
      name: "${APP_NAME}-app-${JOB_NAME}"
    spec:
      ports:
        - name: 3000-tcp
          port: 3000
          protocol: TCP
          targetPort: 3000
      selector:
        app: "${APP_NAME}-${JOB_NAME}"
        deploymentconfig: "${APP_NAME}-app-${JOB_NAME}"
        role: app
  - apiVersion: v1
    kind: Route
    metadata:
      name: "${APP_NAME}-app-${JOB_NAME}"
    spec:
      host: "${HOST_ROUTE}"
      path: /
      port:
        targetPort: 3000-tcp
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: "${APP_NAME}-app-${JOB_NAME}"
        weight: 100
      wildcardPolicy: None
parameters:
  - name: APP_NAME
    description: Application name
    displayName: Application name
    required: true
  - name: HOST_ROUTE
    description: The host the route will use to expose service outside cluster
    displayName: Host route
    required: true
  - name: JOB_NAME
    description: Job identifier (i.e. 'pr-5' OR 'master')
    displayName: Job Branch Name
    required: true
  - name: NAMESPACE
    description: Target namespace reference (i.e. '9f0fbe-dev')
    displayName: Target Namespace
    required: true
  - name: REPO_NAME
    description: Application repository name
    displayName: Repository Name
    required: true
  - name: CPU_LIMIT
    description: Limit Peak CPU per pod (in millicores ex. 1000m)
    displayName: CPU Limit
    value: 1000m
  - name: CPU_REQUEST
    description: Requested CPU per pod (in millicores ex. 500m)
    displayName: CPU Request
    value: 100m
  - name: MEMORY_LIMIT
    description: Limit Peak Memory per pod (in gigabytes Gi or megabytes Mi ex. 2Gi)
    displayName: Memory Limit
    value: 1Gi
  - name: MEMORY_REQUEST
    description: Requested Memory per pod (in gigabytes Gi or megabytes Mi ex. 500Mi)
    displayName: Memory Request
    value: 256Mi
  - name: FILE_CACHE_DIR
    description: Path to file cache
    displayName: Directory to mount for file cache
    required: true
    value: "/var/lib/file-cache/data"
  - name: FILE_CACHE_VOLUME_CAPACITY
    description: Volume space available for File Cache
    displayName: File Cache Volume Capacity (use M or G, not Mi or Gi)
    required: true
    value: 2G
  - name: FILE_CACHE_VOLUME_CAPACITY_BYTES
    description: Volume space available for File Cache in npm bytes parseable format
    displayName: File Cache Volume Capacity Bytes in npm bytes parseable format (use MB or GB, not Mi or Gi).  Must match File Cache Volume Capacity
    required: true
    value: 2GB
  - name: FILE_CACHE_MAX_FILE_SIZE
    description: Set a maximum file size to store in cache.
    displayName: Set a maximum file size to store in cache, cache should always leave this space free to handle request.  Use MB or GB or B - parseable by npm bytes library.
    required: true
    value: 25MB
  - name: FILE_CACHE_PERSISTENT_VOLUME_CLASS
    description: The storage class of the volume
    displayName: Persistent Volume Class name
    required: false
    value: netapp-file-standard
